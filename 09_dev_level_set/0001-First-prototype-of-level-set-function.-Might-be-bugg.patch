From 51c17b1a19c7702df30a92213150ee853a2082e3 Mon Sep 17 00:00:00 2001
From: Martin FERRAND <martin.ferrand@ponts.org>
Date: Wed, 4 Nov 2015 23:44:16 +0100
Subject: [PATCH] First prototype of level-set function. Might be bugged...

---
 src/base/modini.f90 |  6 ++++++
 src/base/optcal.f90 | 15 +++++++++++++++
 src/base/phyvar.f90 | 37 +++++++++++++++++++++++++++++++++++--
 src/base/predvv.f90 | 10 ++++++++--
 src/base/resopv.f90 | 53 +++++++++++++++++++++++++++++++++++++++++++++--------
 5 files changed, 109 insertions(+), 12 deletions(-)

diff --git a/src/base/modini.f90 b/src/base/modini.f90
index 4c316a37aa..f24cdd0de0 100644
--- a/src/base/modini.f90
+++ b/src/base/modini.f90
@@ -871,6 +871,12 @@ if (iscalt.gt.0) then
   endif
 endif
 
+if (ilevst.eq.1) then
+  if (visls0(ivolf2).lt.-grand) then
+    visls0(ivolf2) = viscl0
+  endif
+endif
+
 if (nscaus.gt.0) then
   do jj = 1, nscaus
     if (iscavr(jj).le.0 .and. visls0(jj).lt.-grand) then
diff --git a/src/base/optcal.f90 b/src/base/optcal.f90
index 0dc65c8a92..ec74622371 100644
--- a/src/base/optcal.f90
+++ b/src/base/optcal.f90
@@ -1030,6 +1030,21 @@ module optcal
   integer, save :: ivofmt
 
   !> \}
+  !----------------------------------------------------------------------------
+  ! Level set
+  !----------------------------------------------------------------------------
+
+  !> \defgroup level_set Level set
+
+  !> \addtogroup level_set
+  !> \{
+
+  !> Level set module
+  !>    -  0: deactivated
+  !>    -  1: activated
+  integer, save :: ilevst
+
+  !> \}
 
   !----------------------------------------------------------------------------
   ! Additional source terms
diff --git a/src/base/phyvar.f90 b/src/base/phyvar.f90
index 0574aa6bb3..01e9282e75 100644
--- a/src/base/phyvar.f90
+++ b/src/base/phyvar.f90
@@ -101,7 +101,7 @@ double precision xk, xe, xnu, xrom, vismax(nscamx), vismin(nscamx)
 double precision nusa, xi3, fv1, cv13
 double precision varmn(4), varmx(4), tt, ttmin, ttke, viscto
 double precision xttkmg, xttdrb
-double precision trrij,rottke
+double precision trrij,rottke, width, xrtp
 double precision, dimension(:), pointer :: brom, crom
 double precision, dimension(:), pointer :: cvar_k, cvar_ep, cvar_phi, cvar_nusa
 double precision, dimension(:), pointer :: cvar_r11, cvar_r22, cvar_r33
@@ -110,8 +110,9 @@ double precision, dimension(:,:), pointer :: cvar_rij
 double precision, dimension(:), pointer :: sval
 double precision, dimension(:,:), pointer :: visten, vistes, cpro_visma_v
 double precision, dimension(:), pointer :: viscl, visct, cpro_vis
-double precision, dimension(:), pointer :: cvar_voidf
+double precision, dimension(:), pointer :: cvar_voidf, cvar_scal
 double precision, dimension(:), pointer :: cpro_var, cpro_beta, cpro_visma_s
+double precision, dimension(:), pointer :: heavyside, dirac
 
 integer          ipass
 data             ipass /0/
@@ -743,6 +744,38 @@ if (varmn(ii).lt.0.d0) then
   iok = iok + 1
 endif
 
+call field_get_val_s(icrom, crom)
+call field_get_val_s(iviscl, viscl)
+
+! HARD CODED I'm not proud of that !
+width = 1.5d0/64.d0
+
+call field_get_val_s_by_name("level_set", cvar_scal)
+call field_get_val_s_by_name("heavyside", heavyside)
+call field_get_val_s_by_name("dirac", dirac)
+
+do iel = 1, ncel
+
+  xrtp = cvar_scal(iel)
+
+  if (xrtp.lt.(-width)) then
+    heavyside(iel) = 0.d0
+    dirac(iel) = 0.d0
+  else if (xrtp.gt.width) then
+    heavyside(iel) = 1.d0
+    dirac(iel) = 0.d0
+  else
+    heavyside(iel) = 0.5d0*(1.d0+xrtp/width+sin(pi*xrtp/width)/pi)
+    dirac(iel) = 0.5d0/width*(1.d0+cos(pi*xrtp/width))
+  endif
+
+  ! rho1 is density of the liquid
+  ! rho2 is density of the vapor
+  viscl(iel) = viscl0 - (viscl0/rho2*rho1 - viscl0)*heavyside(iel)
+  crom(iel) = rho2 - (rho1 - rho2)*heavyside(iel)
+enddo
+
+
 ! Viscosite turbulente definie
 ! on ne clippe pas mu_t en modele LES dynamique, car on a fait
 ! un clipping sur la viscosite totale
diff --git a/src/base/predvv.f90 b/src/base/predvv.f90
index 9bdfb15d78..a5b54509b6 100644
--- a/src/base/predvv.f90
+++ b/src/base/predvv.f90
@@ -286,7 +286,7 @@ if (ippmod(icompf).ge.0) then
   pcrom => croma
 
   ! VOF algorithm and Low Mach compressible Algos: density at time n-1
-else if ((idilat.gt.1.or.ivofmt.ge.0.or.ipredfl.eq.0).and.irovar.eq.1) then
+else if ((idilat.gt.1.or.ivofmt.ge.0.or.ipredfl.eq.0).and.irovar.eq.1.and.ilevst.eq.0) then
   if (iterns.eq.1) then
     pcrom => cromaa
   else
@@ -560,7 +560,6 @@ if (iforbr.ge.0 .and. iterns.eq.1) then
 endif
 
 if (iappel.eq.1) then
-
   ! Initialization
   ! NB: at the second call, trav contains the temporal increment
   do iel = 1, ncel
@@ -577,6 +576,13 @@ if (iphydr.eq.1) then
     trav(2,iel) = trav(2,iel)+(frcxt(2 ,iel) - cpro_gradp(2,iel)) * cell_f_vol(iel)
     trav(3,iel) = trav(3,iel)+(frcxt(3 ,iel) - cpro_gradp(3,iel)) * cell_f_vol(iel)
   enddo
+else if (ilevst.ne.0) then
+  do iel = 1, ncel
+    drom = (crom(iel)-ro0)
+    trav(1,iel) = drom * gx * cell_f_vol(iel)
+    trav(2,iel) = drom * gy * cell_f_vol(iel)
+    trav(3,iel) = drom * gz * cell_f_vol(iel)
+  enddo
 else if (iphydr.eq.2) then
   do iel = 1, ncel
     rom = crom(iel)
diff --git a/src/base/resopv.f90 b/src/base/resopv.f90
index 0e7aab7ba2..0c21621b03 100644
--- a/src/base/resopv.f90
+++ b/src/base/resopv.f90
@@ -391,7 +391,7 @@ if (ivofmt.ge.0) then
 endif
 
 ! Calculation of dt/rho
-if (ivofmt.ge.0.or.idilat.eq.4) then
+if (ivofmt.ge.0.or.idilat.eq.4.or.ilevst.ne.0) then
 
   ! Allocate and initialize specific arrays
   allocate(xunsro(ncelet))
@@ -959,7 +959,8 @@ iwarnp = vcopt_p%iwarni
 epsrgp = vcopt_u%epsrgr
 climgp = vcopt_u%climgr
 itypfl = 1
-if (ivofmt.ge.0.or.idilat.eq.4) itypfl = 0
+
+if (ivofmt.ge.0.or.idilat.eq.4.or.ilevst.ne.0) itypfl = 0
 
 call inimav &
 !==========
@@ -1397,7 +1398,7 @@ climgp = vcopt_u%climgr
 itypfl = 1
 ! VOF algorithm: the pressure step corresponds to the
 ! correction of the volumetric flux, not the mass flux
-if (idilat.ge.4.or.ivofmt.ge.0) itypfl = 0
+if (idilat.ge.4.or.ivofmt.ge.0.or.ilevst.ne.0) itypfl = 0
 
 call inimav &
 (f_id0  , itypfl ,                                              &
@@ -2264,14 +2265,50 @@ endif
 ! 8. Update the pressure field
 !===============================================================================
 
-if (idtvar.lt.0) then
-  do iel = 1, ncel
-    cvar_pr(iel) = cvar_pr(iel) + vcopt_p%relaxv*phi(iel)
-  enddo
+if (ilevst .eq. 0) then
+  if (idtvar.lt.0) then
+    do iel = 1, ncel
+      cvar_pr(iel) = cvar_pr(iel) + vcopt_p%relaxv*phi(iel)
+    enddo
+  else
+    do iel = 1, ncel
+      cvar_pr(iel) = cvar_pr(iel) + phi(iel)
+    enddo
+  endif
 else
+  if (idtvar.lt.0) then
+    do iel = 1, ncel
+      phi(iel) = vcopt_p%relaxv*phi(iel)
+    enddo
+  endif
+
   do iel = 1, ncel
-    cvar_pr(iel) = cvar_pr(iel) + phi(iel)
+    cvar_pr(iel) = phi(iel)
   enddo
+
+  ! FIXME: it is not conservative!
+
+  init   = 1
+  inc    = 1
+  iflmb0 = 1
+  if (iale.eq.1) iflmb0 = 0
+  nswrgp = vcopt_u%nswrgr
+  imligp = vcopt_u%imligr
+  iwarnp = vcopt_u%iwarni
+  epsrgp = vcopt_u%epsrgr
+  climgp = vcopt_u%climgr
+  itypfl = 1
+
+  call inimav &
+  !==========
+   ( ivarfl(iu)      , itypfl ,                                     &
+     iflmb0 , init   , inc    , imrgra , nswrgp , imligp ,          &
+     iwarnp ,                                                       &
+     epsrgp , climgp ,                                              &
+     crom, brom   ,                                                 &
+     vel    ,                                                       &
+     coefav , coefbv ,                                              &
+     imasfl , bmasfl )
 endif
 
 ! Transformation of volumic mass fluxes into massic mass fluxes
-- 
2.11.0

